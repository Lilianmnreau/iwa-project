name: EAS Build and APK Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and deploy APK
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout the code
      - uses: actions/checkout@v4

      # 2. Setup Node.js environment
      - uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: npm
          
      # 3. Install dependencies
      - name: Install dependencies
        run: npm ci
        working-directory: ./app

      # 4. Setup Expo and EAS
      - name: Setup Expo and EAS
        uses: expo/expo-github-action@v8
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        with:
          eas-version: latest

      # 5. Build the APK using EAS
      - name: Build APK with EAS
        working-directory: ./app
        run: |
          eas build --platform android --profile production --non-interactive > build_output.txt
          cat build_output.txt
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      # 6. Extract APK URL from build logs
      - name: Extract APK URL
        run: |
          APK_URL=$(grep -o 'https://.*\.apk' ./app/build_output.txt | head -n 1)
          echo "APK_URL=$APK_URL" >> $GITHUB_ENV

      # 7. Download the built APK
      - name: Download APK
        run: |
          mkdir -p ./artifacts
          curl -o ./artifacts/app.apk "$APK_URL"

      # 8. Upload the APK to GitHub Releases
      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: ./artifacts/app.apk
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: v1.0.${{ github.run_number }}
          releaseName: "Release v1.0.${{ github.run_number }} - APK Build"
          body: "This release includes the latest APK for testing or manual installation."
          draft: false
          prerelease: true
