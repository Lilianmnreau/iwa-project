name: EAS Build and APK Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and deploy APK
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout the code
      - uses: actions/checkout@v4

      # 2. Setup Node.js environment
      - uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: npm

      # 3. Check if EXPO_TOKEN is set (debugging step)
      - name: Check EXPO_TOKEN
        run: echo "EXPO_TOKEN is set"
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      # 4. Setup Expo and EAS
      - name: Setup Expo and EAS
        uses: expo/expo-github-action@v8
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        with:
          eas-version: latest

      # 5. Install dependencies
      - name: Install dependencies
        run: npm ci

      # 6. Build the APK using EAS
      - name: Build APK with EAS
        working-directory: ./app
        run: eas build --platform android --profile development --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      # 7. Download the built APK from EAS
      - name: Download APK
        run: |
          mkdir -p ./artifacts
          eas build:download --platform android --path ./artifacts/app.apk
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      # 8. Upload the APK to GitHub Releases
      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: ./artifacts/app.apk
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: v1.0.${{ github.run_number }}
          releaseName: "Release v1.0.${{ github.run_number }}"
          body: "This release includes the latest APK for testing or manual installation."
          draft: false
          prerelease: true
